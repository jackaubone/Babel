doctype html
html(lang="en")
    include includes/head.pug
    body
        include includes/nav.pug

        div.BodyStyle
            h2 How does it work?
            p In the most simple terms:
            ol
                li Each page is given a numerical index. The first page of the first book is page 1, the first page of the second book is 411 and so on, until the last page in the entire library — which has the index 29
                    span.super 3200
                    | .
                li This number is run through a mathematical function to produce another number of 3200 digits, which we represent in base-29 (29 is the number of characters in our limited alphabet).
                li Each digit of the base-29 result is mapped to the character at that position in the limited 29 character alphabet (0 → a, 1 → b, ...) to produce the content of that page.
            p Crucially, the mathematical function is reversible meaning that we can instead give it the contents of a page and determine the page number that it appears on.
            p For a more detailed explanation and to view the source code, please see the
                |
                |
                a(href="https://github.com/tdjsnelling/babel", target="_blank") GitHub repository
                | .

            h2 Is it just creating pages with my search terms and saving them so I can see them again later?
            p No, that would be cheating! It is easy to assume that this website just takes whatever text you search for, inserts it into a random page, and saves that page on disk so that you can find it again at a later date. Similarly with pages of gibberish, what’s to say they aren’t just generated randomly when you request them and saved for later?
            p Building a Library of Babel this way would require unobtainable amounts of storage. A single page (content only) takes up 3200 bytes, with a single byte per ASCII character. 3200 bytes multiplied by 29
                span.super 3200
                |
                | unique pages gives us a total size of 1.509×10
                span.super 4671
                |
                | TB — an infeasible amount of data to store, to say the least.
            p Thus to build a virtual Library of Babel, we have to use a method that doesn’t require any storage. Pages are generated on the fly based on their page number, and the same page number will continue to generate the same page forever, unless the algorithm is changed.

            h2 Where can I learn more about the Library of Babel?
            p If you haven’t already read
                |
                |
                a(href="/pdf/Borges-The-Library-of-Babel.pdf", target="_blank") the story
                |
                | then start there! The website
                |
                a(href="https://libraryofbabel.info", target="_blank") libraryofbabel.info
                |
                | also contains lots of supplemental information and theory, as well as another implementation of the library itself.

        include includes/footer.pug
